from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from auth_service import user_service
from keyboards.all_kb import main_kb, reg_btn, catalog_kb

start_router = Router()


@start_router.message(CommandStart())
async def cmd_start(message: Message):
    user_id = message.from_user.id
    if user_service.is_user_registered(user_id):
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!', reply_markup=main_kb(message.from_user.id))
    else:
        await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –±–æ—Ç –∏ –º–æ–≥—É –ø–æ–º–æ–≥–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö. –ú—ã –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã, '
                             '–ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—à—É —Ç–µ–±—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', reply_markup=reg_btn().as_markup())


@start_router.message(F.text == '/start_3')
async def cmd_start_3(message: Message):
    await message.answer('–ó–∞–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /start_3 –∏—Å–ø–æ–ª—å–∑—É—è –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä F.text!')


@start_router.message(F.text == 'üìö –ö–∞—Ç–∞–ª–æ–≥')
async def cmd_catalog(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=catalog_kb().as_markup())
