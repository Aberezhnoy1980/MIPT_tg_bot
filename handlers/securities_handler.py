import logging

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery
from aiogram.filters.state import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from keyboards.all_kb import securities_services_kb, portfolio_management_kb
from asset_service.securities_service import check_stock_existence, get_stock_price_ru, get_stock_price_world
from utils.asset_states import CheckStock

logger = logging.getLogger(__name__)
stock_router = Router()


@stock_router.callback_query(F.data == "üìà–§–æ–Ω–¥–æ–≤—ã–π —Ä—ã–Ω–æ–∫")
async def cmd_stock_services_list(callback: CallbackQuery):
    await callback.message.answer(
        '–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏, —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–º '
        '–ø–æ—Ä—Ç—Ñ–µ–ª–µ–º, –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ç–µ–∫—É—â—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è',
        reply_markup=securities_services_kb().as_markup())
    await callback.answer()


@stock_router.message(Command('check_stock'))
async def check_stock_start(message: Message, state: FSMContext):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏')
    await state.set_state(CheckStock.asset_id_response)


@stock_router.callback_query(F.data == "/check_stock")
async def check_stock_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏')
    await state.set_state(CheckStock.asset_id_response)
    await callback.answer()


@stock_router.message(StateFilter(CheckStock.asset_id_response))
async def check_stock_id(message: Message, state: FSMContext):
    stock_id = message.text.upper()

    stock_existence = check_stock_existence(stock_id)
    if stock_existence:
        stock_price, stock_currency = get_stock_price_ru(stock_id)
        if stock_price is not None:
            await message.reply(
                f"–¶–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {stock_id} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–µ. "
                f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {stock_price, stock_currency}", reply_markup=securities_services_kb().as_markup())
        else:
            stock_price = get_stock_price_world(stock_id)
            if stock_price is not None:
                await message.reply(
                    f"–¶–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {stock_id} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ Yahoo! Finance. "
                    f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {stock_price}", reply_markup=securities_services_kb().as_markup())
            else:
                await message.reply(
                    f"–¶–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {stock_id} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–µ, –Ω–æ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è –Ω–∏ –≤ "
                    f"–†–æ—Å—Å–∏–∏, –Ω–∏ –∑–∞ —Ä—É–±–µ–∂–æ–º", reply_markup=securities_services_kb().as_markup())
    else:
        await message.reply(
            f"–¶–µ–Ω–Ω–∞—è –±—É–º–∞–≥–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {stock_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–µ, –Ω–∏ –Ω–∞ Yahoo! Finance.",
            reply_markup=securities_services_kb().as_markup())
    await state.clear()
